openapi: 3.0.3
info:
  title: SportsBet Backend 0.1.1
  description: Esta API es del backend de SportsBet
  contact:
    email: rvabrilot@gmail.com
  license:
    name: GNU Lesser 2.1
    url: https://github.com/rvabrilot/sportsbet/blob/main/LICENSE
  version: 0.1.1
externalDocs:
  description: README
  url: https://github.com/rvabrilot/sportsbet/blob/main/README.md
servers:
- url: http://localhost:8080/api/v3
tags:
- name: bet
  description: Una apuesta
- name: event
  description: Un evento sobre el cual se pueden hacer apuestas
- name: user
  description: un usuario del sistema
- name: event_category
  description: Una categoria de evento ejemplo primera division
- name: event_player
  description: Nombre de un equipo o jugador en un evento ejemplo U. de Chile
- name: ranking
  description: El Ranking de los usuarios
paths:
  /bet:
    get:
      tags:
      - bet
      summary: Find bet by ID
      description: Returns a single bet
      operationId: get_bets
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bet'
      x-openapi-router-controller: sportsbet_server.controllers.bet_controller
    post:
      tags:
      - bet
      summary: Add a new bet
      description: Add a new bet
      operationId: add_bet
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bet'
        "405":
          description: Invalid input
      x-openapi-router-controller: sportsbet_server.controllers.bet_controller
  /update_bet:
    post:
      tags:
      - bet
      summary: Updates  bet
      description: Updates  bet
      operationId: update_bet
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bet'
        "405":
          description: Invalid input
      x-openapi-router-controller: sportsbet_server.controllers.bet_controller
  /bet/{id}:
    get:
      tags:
      - bet
      summary: Find bet by ID
      description: Returns a single bet
      operationId: get_bet_by_id
      parameters:
      - name: id
        in: path
        description: ID of bet to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bet'
        "400":
          description: Invalid ID supplied
        "404":
          description: Bet not found
      x-openapi-router-controller: sportsbet_server.controllers.bet_controller
    delete:
      tags:
      - bet
      summary: Deletes a bet
      description: delete a bet
      operationId: delete_bet
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: betId
        in: path
        description: Bet id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid bet value
      x-openapi-router-controller: sportsbet_server.controllers.bet_controller
  /event_player:
    get:
      tags:
      - event_player
      summary: list all event player
      description: List all event players
      operationId: get_event_players
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
#      security:
#      - api_key: []
      x-openapi-router-controller: sportsbet_server.controllers.event_player_controller
    post:
      tags:
      - event_player
      summary: Add a new event player
      description: Add a new event player
      operationId: add_event_player
      parameters:
      - name: name
        in: query
        description: the name of the event player
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPlayer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventPlayer'
        "405":
          description: Invalid input
      x-openapi-router-controller: sportsbet_server.controllers.event_player_controller
  /update_event:
    post:
      tags:
      - event
      summary: Update event
      description: This can only be done by the logged in.
      operationId: update_event
      requestBody:
        description: Update an existent event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: sportsbet_server.controllers.event_controller
  /event_player/{Id}:
    get:
      tags:
      - event_player
      summary: Find event_player by ID
      description: Returns a single event_player
      operationId: get_event_player_by_id
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: ID of event_player to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPlayer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventPlayer'
        "400":
          description: Invalid ID supplied
        "404":
          description: EventPlayer not found
      x-openapi-router-controller: sportsbet_server.controllers.event_player_controller
    delete:
      tags:
      - event_player
      summary: Deletes a event_player
      description: delete a event_player
      operationId: delete_event_player
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: EventPlayer id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid event_player value
      x-openapi-router-controller: sportsbet_server.controllers.event_player_controller
  /update_event_player:
    post:
      tags:
      - event_player
      summary: Update event_player
      description: This can only be done by the logged in event_player.
      operationId: update_event_player
      requestBody:
        description: Update an existent event_player in the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventPlayer'
          application/xml:
            schema:
              $ref: '#/components/schemas/EventPlayer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventPlayer'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: sportsbet_server.controllers.event_player_controller
  /update_event_category:
    post:
      tags:
      - event_category
      summary: Update event_category
      description: This can only be done by the logged in event_category.
      operationId: update_event_category
      requestBody:
        description: Update an existent event_category in the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/EventCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCategory'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: sportsbet_server.controllers.event_category_controller
  /event_category:
    get:
      tags:
      - event_category
      summary: list all event categories
      description: List all event categories
      operationId: get_event_categories
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
#      security:
#      - api_key: []
      x-openapi-router-controller: sportsbet_server.controllers.event_category_controller
    post:
      tags:
      - event_category
      summary: Add a new event player
      description: Add a new event player
      operationId: add_event_category
      parameters:
      - name: name
        in: query
        description: the name of the event player
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventCategory'
        "405":
          description: Invalid input
      x-openapi-router-controller: sportsbet_server.controllers.event_category_controller
  /event_category/{Id}:
    get:
      tags:
      - event_category
      summary: Find event_category by ID
      description: Returns a single event_category
      operationId: get_event_category_by_id
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: ID of event_category to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventCategory'
        "400":
          description: Invalid ID supplied
        "404":
          description: EventCategory not found
      x-openapi-router-controller: sportsbet_server.controllers.event_category_controller
    delete:
      tags:
      - event_category
      summary: Deletes a event_category
      description: delete a event_category
      operationId: delete_event_category
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: EventCategory id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid event_category value
      x-openapi-router-controller: sportsbet_server.controllers.event_category_controller
  /event:
    get:
      tags:
      - event
      summary: Returns events available to bet on
      description: list of events
      operationId: get_events
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
#      security:
#      - api_key: []
      x-openapi-router-controller: sportsbet_server.controllers.event_controller
    post:
      tags:
      - event
      summary: Add a new event  
      description: Add a new event  
      operationId: add_event
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event'
        "405":
          description: Invalid input
      x-openapi-router-controller: sportsbet_server.controllers.event_controller
  /event/{Id}:
    get:
      tags:
      - event
      summary: Find event by ID
      description: Returns a single event
      operationId: get_event_by_id
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: ID of event to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event'
        "400":
          description: Invalid ID supplied
        "404":
          description: Event not found
      x-openapi-router-controller: sportsbet_server.controllers.event_controller
    
  /user:
    get:
      tags:
      - user
      summary: Returns all users
      description: list of users
      operationId: get_users
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
#      security:
#      - api_key: []
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: create_user
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
  /update_user:
    post:
      tags:
      - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: update_user
      requestBody:
        description: Update an existent user in the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      description: ""
      operationId: login_user
      parameters:
      - name: email
        in: query
        description: The email for login
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in md5
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
                x-content-type: application/xml
            application/json:
              schema:
                type: string
        "400":
          description: Invalid email/password supplied
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logout_user
      parameters: []
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
  /user/{id}:
    get:
      tags:
      - user
      summary: Get user by id
      description: ""
      operationId: get_user_by_id
      parameters:
      - name: id
        in: path
        description: 'The id of the user that needs to be fetched.'
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid id supplied
        "404":
          description: User not found
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: delete_user
      parameters:
      - name: id
        in: path
        description: The id of the user that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid id supplied
        "404":
          description: User not found
      x-openapi-router-controller: sportsbet_server.controllers.user_controller
  /ranking:
    get:
      tags:
      - ranking
      summary: Returns the ranking
      description: the ranking
      operationId: get_ranking
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
#      security:
#      - api_key: []
      x-openapi-router-controller: sportsbet_server.controllers.ranking_controller
components:
  schemas:
    EventPlayer:
      type: object
      properties:
        id:
          type: string
          example: 07cb3c2c-b40c-472f-b05c-7168ac4327e0
        name:
          type: string
          example: U. de Chile
    EventCategory:
      type: object
      properties:
        id:
          type: string
          example: 07cb3c2c-b40c-472f-b05c-7168ac4327e0
        name:
          type: string
          example: Primera Division
    Event:
      type: object
      properties:
        id:
          type: string
          example: 07cb3c2c-b40c-472f-b05c-7168ac4327e0
        event_start:
          type: string
          example: 2020-08-01 08:50
        event_end:
          type: string
          example: 2020-08-01 08:50
        local_player:
          type: string
          example: U. de Chile
        visitor_player:
          type: string
          example: U. de Chile
        category:
          type: string
          example: Futbol de Chile - Primera Division
        goals:
          type: number
          example: 1
        result:
          type: string
          example: l
        stats_link:
          type: string
          example: 
      example:
        local_player: U. de Chile
        visitor_player: U. de Chile
        event_start: 2020-08-01 08:50
        event_end: 2020-08-01 08:50
        id: 07cb3c2c-b40c-472f-b05c-7168ac4327e0
        category: Futbol de Chile - Primera Division
      xml:
        name: event
    User:
      type: object
      properties:
        id:
          type: string
          example: "2c82b556-176f-4ea3-96f5-9bb64878373b"
        nickname:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        md5:
          type: string
          example: "12345"
        role:
          type: string
          example: "jugador"
        login_uuid:
          type: string
          example: "2c82b556-176f-4ea3-96f5-9bb64878373b"
      example:
        nickname: theUser
        id: "10"
        email: john@email.com
        md5: "12345"
        role: "jugador"
      xml:
        name: user
    Bet:
      required:
      - goals
      - result
      - event_id
      - user_id
      type: object
      properties:
        id:
          type: string
          example: e9f01bd4-4010-11ed-b878-0242ac120002
        user_id:
          type: string
          example: e9f01bd4-4010-11ed-b878-0242ac120002
        bet_datetime:
          type: string
          example: 2022-08-01 23:59
        goals:
          type: number
          example: 1
        status:
          type: string
          description: bet status
          enum:
          - created
          - win
          - lose
      example:
        user_id: e9f01bd4-4010-11ed-b878-0242ac120002
        id: e9f01bd4-4010-11ed-b878-0242ac120002
        bet_datetime: 2022-08-01 23:59
        events:
        - local_player: U. de Chile
          visitor_player: U. de Chile
          event_start: 2020-08-01 08:50
          event_end: 2020-08-01 08:50
          id: 07cb3c2c-b40c-472f-b05c-7168ac4327e0
          category: Futbol de Chile - Primera Division
          goals: 1
          result: l
        status: win
      xml:
        name: bet
  requestBodies:
    Bet:
      description: Bet object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Bet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Bet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    bet_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://localhost:8080/oauth/authorize
          scopes:
            write:bets: modify bets in your account
            read:bets: read your bets
      x-tokenInfoFunc: sportsbet_server.controllers.authorization_controller.check_bet_auth
      x-scopeValidateFunc: sportsbet_server.controllers.authorization_controller.validate_scope_bet_auth
    api_key:
      type: apiKey
      name: api_key
      in: header
      x-apikeyInfoFunc: sportsbet_server.controllers.authorization_controller.check_api_key

